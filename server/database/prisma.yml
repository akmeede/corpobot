# REQUIRED
# The name for the service. It will be part of the service's HTTP endpoint.
service: service-name

# REQUIRED
# The stage to which the service is deployed. This is the last part
# of the service's HTTP endpoint (e.g. `dev`, see example above).
# Here, the cluster is loaded as an environment variable from .env.
stage: ${env:PRISMA_STAGE}

# REQUIRED
# Points to the files containing your data model.
datamodel:
- datamodel/types.graphql
# - datamodel/enums.graphql

# OPTIONAL
# Only for development!
# to disable authentication (ignore secret):
disableAuth: true

# The secret is used to generate JTWs which allow to authenticate
# against your Prisma service. You can use the `prisma token` command from the CLI
# to generate a JWT based on the secret. When using the `prisma-binding` package,
# you don't need to generate the JWTs manually as the library is doing that for you
# (this is why you're passing it to the `Prisma` constructor).
# Here, the secret is loaded as an environment variable from .env.
# secret: ${env:PRISMA_SECRET}

# OPTIONAL
# Defines how to seed data to the database upon the initial deploy.
seed:
  import: seed.graphql

# OPTIONAL
# The cluster your service is deployed to. Cluster information (such as
# host and cluster secret) are stored in `~/.prisma/config.yml`.
# Here, the cluster is loaded as an environment variable from .env.
cluster: dev/prisma-us1
